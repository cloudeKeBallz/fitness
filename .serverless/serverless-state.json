{
  "service": {
    "service": "windOfChange-sls-ts",
    "serviceObject": {
      "name": "windOfChange-sls-ts"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DescribeStream",
            "dynamodb:GetRecords",
            "dynamodb:GetShardIterator",
            "dynamodb:ListStreams",
            "dynamodb:Scan"
          ],
          "Resource": "arn:aws:dynamodb:*:*:table/*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "HttpLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/windOfChange-sls-ts-dev-http"
            }
          },
          "FitbitLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/windOfChange-sls-ts-dev-fitbit"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "windOfChange-sls-ts",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/windOfChange-sls-ts-dev-http:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/windOfChange-sls-ts-dev-fitbit:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/windOfChange-sls-ts-dev-http:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/windOfChange-sls-ts-dev-fitbit:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "windOfChange-sls-ts",
                    "dev",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HttpLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/windOfChange-sls-ts/dev/1556952194959-2019-05-04T06:43:14.959Z/windOfChange-sls-ts.zip"
              },
              "FunctionName": "windOfChange-sls-ts-dev-http",
              "Handler": "src/handlers/googleLambda.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 10
            },
            "DependsOn": [
              "HttpLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HttpLambdaVersionmjRKI5AYzrWzDaQt95XF1GFWspN8SDxiPu7DULBz8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HttpLambdaFunction"
              },
              "CodeSha256": "6p/4443CeiVD3pqNM+sidaF5PAkSTdV2olJ67Kb67Tg="
            }
          },
          "FitbitLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/windOfChange-sls-ts/dev/1556952194959-2019-05-04T06:43:14.959Z/windOfChange-sls-ts.zip"
              },
              "FunctionName": "windOfChange-sls-ts-dev-fitbit",
              "Handler": "src/handlers/fitbitLambda.http",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 10
            },
            "DependsOn": [
              "FitbitLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "FitbitLambdaVersionwnuj5VMmOHiiYBRO602rEBPCjPv43eORmZhjnBmQrA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FitbitLambdaFunction"
              },
              "CodeSha256": "6p/4443CeiVD3pqNM+sidaF5PAkSTdV2olJ67Kb67Tg="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-windOfChange-sls-ts",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGooglefit": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "googlefit",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGooglefitProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceGooglefit"
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFitbit": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fitbit",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFitbitProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFitbit"
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGooglefitAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGooglefit"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HttpLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGooglefitProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGooglefitProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HttpLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodFitbitAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFitbit"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FitbitLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodFitbitProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFitbitProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FitbitLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1556952174189": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGooglefitAny",
              "ApiGatewayMethodGooglefitProxyVarAny",
              "ApiGatewayMethodFitbitAny",
              "ApiGatewayMethodFitbitProxyVarAny"
            ]
          },
          "HttpLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HttpLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FitbitLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FitbitLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Config": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "config",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "Steps": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "googlefitsteps",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "Calories": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "googlefitcal",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "FitbitSteps": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "fitbitsteps",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userTime",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userTime",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "FitbitCalories": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "fitbitcalories",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userTime",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userTime",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "FitbitConfig": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "fitbitconfig",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "HttpLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HttpLambdaVersionmjRKI5AYzrWzDaQt95XF1GFWspN8SDxiPu7DULBz8"
            }
          },
          "FitbitLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FitbitLambdaVersionwnuj5VMmOHiiYBRO602rEBPCjPv43eORmZhjnBmQrA"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline",
      "serverless-dynamodb-local"
    ],
    "pluginsData": {},
    "functions": {
      "http": {
        "handler": "src/handlers/googleLambda.handler",
        "timeout": 10,
        "events": [
          {
            "http": "ANY /googlefit"
          },
          {
            "http": "ANY /googlefit/{proxy+}"
          }
        ],
        "name": "windOfChange-sls-ts-dev-http",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "fitbit": {
        "handler": "src/handlers/fitbitLambda.http",
        "timeout": 10,
        "events": [
          {
            "http": "ANY /fitbit"
          },
          {
            "http": "ANY /fitbit/{proxy+}"
          }
        ],
        "name": "windOfChange-sls-ts-dev-fitbit",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "Config": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "config",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "Steps": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "googlefitsteps",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "Calories": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "googlefitcal",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "FitbitSteps": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "fitbitsteps",
            "AttributeDefinitions": [
              {
                "AttributeName": "userTime",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userTime",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "FitbitCalories": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "fitbitcalories",
            "AttributeDefinitions": [
              {
                "AttributeName": "userTime",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userTime",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "FitbitConfig": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "fitbitconfig",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "layers": {},
    "artifact": "/Users/suhasbharadwaj/Documents/Personal/Nodejs/EverythingWorks/serverless-express-typescript-2-2/.serverless/windOfChange-sls-ts.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/windOfChange-sls-ts/dev/1556952194959-2019-05-04T06:43:14.959Z",
    "artifact": "windOfChange-sls-ts.zip"
  }
}